[
    {
        "repo": "https://github.com/mlco2/codecarbon",
        "category": "environment",
        "image": "https://avatars.githubusercontent.com/u/54071934?v=4",
        "website": "https://mlco2.github.io/codecarbon",
        "poc": [],
        "title": "codecarbon",
        "description": "Track emissions from Compute and recommend ways to reduce their impact on the environment.",
        "language": "Python",
        "stars": 1185,
        "keywords": [
            "environment",
            "ways",
            "impact",
            "track",
            "recommend",
            "compute",
            "emissions",
            "reduce"
        ]
    },
    {
        "repo": "https://github.com/ushahidi/platform",
        "category": "humanitarian",
        "image": "https://avatars.githubusercontent.com/u/16959?v=4",
        "website": "http://ushahidi.com/",
        "poc": [],
        "title": "platform",
        "description": "Ushahidi Platform API version 3+",
        "language": "PHP",
        "stars": 684,
        "keywords": [
            "hacktoberfest",
            "version",
            "ushahidi",
            "api",
            "platform"
        ]
    },
    {
        "repo": "https://github.com/signalapp/Signal-Desktop",
        "category": "society",
        "image": "https://avatars.githubusercontent.com/u/702459?v=4",
        "website": "https://signal.org/download",
        "poc": [],
        "title": "Signal-Desktop",
        "description": "A private messenger for Windows, macOS, and Linux.",
        "language": "TypeScript",
        "stars": 14707,
        "keywords": [
            "messenger",
            "macos",
            "windows",
            "private",
            "linux"
        ]
    },
    {
        "repo": "https://github.com/signalapp/Signal-Server",
        "category": "tech",
        "image": "https://avatars.githubusercontent.com/u/702459?v=4",
        "website": "https://signal.org/",
        "poc": [],
        "title": "Signal-Server",
        "description": "Server supporting the Signal Private Messenger applications on Android, Desktop, and iOS",
        "language": "Java",
        "stars": 9283,
        "keywords": [
            "supporting",
            "messenger",
            "android",
            "applications",
            "server",
            "signal",
            "desktop",
            "private",
            "ios"
        ]
    },
    {
        "repo": "https://github.com/meshtastic/firmware",
        "category": "society",
        "image": "https://avatars.githubusercontent.com/u/61627050?v=4",
        "website": "https://meshtastic.org",
        "poc": [],
        "title": "firmware",
        "description": "Meshtastic device firmware",
        "language": "C++",
        "stars": 3680,
        "keywords": [
            "esp32",
            "gps",
            "heltec",
            "hiking",
            "lora",
            "mesh",
            "mesh-networks",
            "meshtastic",
            "nrf52",
            "off-grid",
            "pico",
            "rp2040",
            "stm32",
            "ttgo",
            "ttgo-tbeam",
            "meshtastic",
            "firmware",
            "device"
        ]
    },
    {
        "repo": "https://github.com/ckan/ckan",
        "category": "tech",
        "image": "https://avatars.githubusercontent.com/u/1630326?v=4",
        "website": "https://ckan.org/",
        "poc": [],
        "title": "ckan",
        "description": "CKAN is an open-source DMS (data management system) for powering data hubs and data portals. CKAN makes it easy to publish, share and use data. It powers catalog.data.gov, open.canada.ca/data, data.humdata.org among many other sites.",
        "language": "Python",
        "stars": 4497,
        "keywords": [
            "api",
            "catalog",
            "ckan",
            "ckanext",
            "data",
            "digitalpublicgoods",
            "dpg",
            "open-data",
            "python",
            "sdg16",
            "open",
            "humdata",
            "source",
            "use",
            "publish",
            "makes",
            "system",
            "data",
            "dms",
            "catalog"
        ]
    },
    {
        "repo": "https://github.com/mwmbl/mwmbl",
        "category": "society",
        "image": "https://avatars.githubusercontent.com/u/96680880?v=4",
        "website": "https://mwmbl.org",
        "poc": [],
        "title": "mwmbl",
        "description": "An open source, non-profit web search engine",
        "language": "Python",
        "stars": 1513,
        "keywords": [
            "non-profit",
            "search-engine",
            "web",
            "open",
            "engine",
            "search",
            "non",
            "source",
            "profit"
        ]
    },
    {
        "repo": "https://github.com/freenet/freenet-core",
        "category": "society",
        "image": "https://avatars.githubusercontent.com/u/77513?v=4",
        "website": "https://freenet.org/",
        "poc": [],
        "title": "freenet-core",
        "description": "Declare your digital independence",
        "language": "Rust",
        "stars": 2283,
        "keywords": [
            "cryptography",
            "decentralized",
            "distributed-hash-table",
            "freenet",
            "p2p",
            "privacy",
            "rust",
            "independence",
            "digital",
            "declare"
        ]
    },
    {
        "repo": "https://github.com/libremesh/lime-packages",
        "category": "tech",
        "image": "https://avatars.githubusercontent.com/u/4405582?v=4",
        "website": "https://libremesh.org/",
        "poc": [],
        "title": "lime-packages",
        "description": "LibreMesh packages configuring OpenWrt for wireless mesh networking",
        "language": "Lua",
        "stars": 281,
        "keywords": [
            "firmware",
            "hacktoberfest",
            "libremesh",
            "lua",
            "mesh",
            "mesh-networks",
            "openwrt",
            "openwrt-buildroot",
            "openwrt-package",
            "routing",
            "networking",
            "wireless",
            "libremesh",
            "configuring",
            "mesh",
            "openwrt",
            "packages"
        ]
    },
    {
        "repo": "https://github.com/openmrs/openmrs-core",
        "category": "health",
        "image": "https://avatars.githubusercontent.com/u/860776?v=4",
        "website": "http://openmrs.org",
        "poc": [],
        "title": "openmrs-core",
        "description": "OpenMRS API and web application code",
        "language": "Java",
        "stars": 1428,
        "keywords": [
            "ehr",
            "emr",
            "health",
            "healthcare",
            "hospital",
            "java",
            "medical-records",
            "openmrs",
            "openmrs-community",
            "web",
            "code",
            "api",
            "openmrs",
            "application"
        ]
    },
    {
        "repo": "https://github.com/hotosm/OpenAerialMap",
        "category": "environment",
        "image": "https://avatars.githubusercontent.com/u/458752?v=4",
        "website": "https://openaerialmap.org/",
        "poc": [],
        "title": "OpenAerialMap",
        "description": "OpenAerialMap is an open service to provide access to a commons of openly licensed imagery and map layer services.",
        "language": null,
        "stars": 243,
        "keywords": [
            "licensed",
            "open",
            "commons",
            "map",
            "openly",
            "provide",
            "services",
            "imagery",
            "service",
            "layer"
        ]
    },
    {
        "repo": "https://github.com/protontypes/open-sustainable-technology",
        "category": "environment",
        "image": "",
        "title": "open-sustainable-technology",
        "description": "A directory and analysis of the open source ecosystem in the areas of climate change, sustainable energy, biodiversity and natural resources.  https://docs.getgrist.com/gSscJkc5Rb1R/OpenSustaintech",
        "language": null,
        "stars": 2108,
        "website": "https://opensustain.tech",
        "keywords": [
            "awesome",
            "awesome-list",
            "biodiversity",
            "carbon-emissions",
            "climate",
            "climate-change",
            "climate-data",
            "climate-science",
            "earth-science",
            "energy",
            "energy-consumption",
            "energy-data",
            "geoscience",
            "ocean",
            "photovoltaic",
            "renewable-energy",
            "renewables",
            "sustainability",
            "sustainable-development-goals",
            "wind-turbine",
            "biodiversity",
            "open",
            "natural",
            "docs",
            "resources",
            "source",
            "opensustaintech",
            "https",
            "com",
            "analysis"
        ]
    },
    {
        "repo": "https://github.com/protontypes/open-sustainable-technology",
        "category": "environment",
        "image": "",
        "title": "open-sustainable-technology",
        "description": "A directory and analysis of the open source ecosystem in the areas of climate change, sustainable energy, biodiversity and natural resources.  https://docs.getgrist.com/gSscJkc5Rb1R/OpenSustaintech",
        "language": null,
        "stars": 2108,
        "website": "https://opensustain.tech",
        "keywords": [
            "awesome",
            "awesome-list",
            "biodiversity",
            "carbon-emissions",
            "climate",
            "climate-change",
            "climate-data",
            "climate-science",
            "earth-science",
            "energy",
            "energy-consumption",
            "energy-data",
            "geoscience",
            "ocean",
            "photovoltaic",
            "renewable-energy",
            "renewables",
            "sustainability",
            "sustainable-development-goals",
            "wind-turbine",
            "biodiversity",
            "open",
            "natural",
            "docs",
            "resources",
            "source",
            "opensustaintech",
            "https",
            "com",
            "analysis"
        ]
    },
    {
        "repo": "https://github.com/ecosyste-ms/ost",
        "category": "environment",
        "image": "",
        "title": "ost",
        "description": "A curated list of open technology projects to sustain a stable climate, energy supply, biodiversity and natural resources, based on data from https://opensustain.tech",
        "language": "Ruby",
        "stars": 7,
        "website": "https://ost.ecosyste.ms",
        "keywords": [
            "biodiversity",
            "open",
            "natural",
            "resources",
            "technology",
            "tech",
            "https",
            "opensustain",
            "data",
            "based"
        ]
    },
    {
        "repo": "https://github.com/pvlib/pvlib-python",
        "category": "environment",
        "image": "",
        "title": "pvlib-python",
        "description": "A set of documented functions for simulating the performance of photovoltaic energy systems.",
        "language": "Python",
        "stars": 1220,
        "website": "https://pvlib-python.readthedocs.io",
        "keywords": [
            "photovoltaic",
            "python",
            "renewable-energy",
            "renewables",
            "solar-energy",
            "systems",
            "performance",
            "simulating",
            "documented",
            "functions",
            "set",
            "energy",
            "photovoltaic"
        ]
    },
    {
        "repo": "https://github.com/SunPower/pvfactors",
        "category": "environment",
        "image": "",
        "title": "pvfactors",
        "description": ":sunny: Open-source view-factor model for diffuse shading and bifacial PV modeling. Documentation: ",
        "language": "Python",
        "stars": 81,
        "website": "http://sunpower.github.io/pvfactors/",
        "keywords": [
            "bifacial",
            "python",
            "renewable-energy",
            "solar-energy",
            "factor",
            "open",
            "documentation",
            "shading",
            "model",
            "sunny",
            "source",
            "bifacial",
            "view",
            "diffuse"
        ]
    },
    {
        "repo": "https://github.com/renewables-ninja/gsee",
        "category": "environment",
        "image": "",
        "title": "gsee",
        "description": "GSEE: Global Solar Energy Estimator",
        "language": "Python",
        "stars": 124,
        "website": "https://gsee.readthedocs.io/",
        "keywords": [
            "electricity",
            "energy",
            "irradiance",
            "ninja",
            "pandas",
            "photovoltaic",
            "pv",
            "solar",
            "estimator",
            "global",
            "gsee",
            "energy",
            "solar"
        ]
    },
    {
        "repo": "https://github.com/SunPower/PVMismatch",
        "category": "environment",
        "image": "",
        "title": "PVMismatch",
        "description": "An explicit Python PV system IV & PV curve trace calculator which can also calculate mismatch.",
        "language": "Jupyter Notebook",
        "stars": 79,
        "website": "http://sunpower.github.io/PVMismatch/",
        "keywords": [
            "numpy",
            "photovoltaic",
            "python",
            "scipy",
            "solar",
            "mismatch",
            "system",
            "calculate",
            "also",
            "python",
            "calculator",
            "explicit",
            "curve",
            "trace"
        ]
    },
    {
        "repo": "https://github.com/NREL/rdtools",
        "category": "environment",
        "image": "",
        "title": "rdtools",
        "description": "PV Analysis Tools in Python",
        "language": "Python",
        "stars": 158,
        "website": "https://rdtools.readthedocs.io/",
        "keywords": [
            "tools",
            "analysis",
            "python"
        ]
    },
    {
        "repo": "https://github.com/ColasGael/Machine-Learning-for-Solar-Energy-Prediction",
        "category": "environment",
        "image": "",
        "title": "Machine-Learning-for-Solar-Energy-Prediction",
        "description": "Predict the Power Production of a solar panel farm from Weather Measurements using Machine Learning",
        "language": "Python",
        "stars": 238,
        "website": "",
        "keywords": [
            "data-processing",
            "machine-learning",
            "matlab",
            "neural-network",
            "python",
            "tensorflow",
            "weather",
            "measurements",
            "panel",
            "predict",
            "production",
            "using",
            "solar",
            "farm",
            "machine",
            "power"
        ]
    },
    {
        "repo": "https://github.com/zae-bayern/elpv-dataset",
        "category": "environment",
        "image": "",
        "title": "elpv-dataset",
        "description": "A dataset of functional and defective solar cells extracted from EL images of solar modules",
        "language": "Python",
        "stars": 230,
        "website": "",
        "keywords": [
            "computer-vision",
            "machine-learning",
            "photovoltaic",
            "solar-cells",
            "solar-energy",
            "modules",
            "functional",
            "dataset",
            "defective",
            "images",
            "cells",
            "solar",
            "extracted"
        ]
    },
    {
        "repo": "https://github.com/oemof/feedinlib",
        "category": "environment",
        "image": "",
        "title": "feedinlib",
        "description": "This repository contains implementations of photovoltaic models to calculate electricity generation from a pv installation based on given solar radiation. Furthermore it contains all necessary pre-calculations.",
        "language": "Python",
        "stars": 102,
        "website": "",
        "keywords": [
            "radiation",
            "electricity",
            "calculations",
            "repository",
            "calculate",
            "necessary",
            "based",
            "models",
            "pre",
            "installation"
        ]
    },
    {
        "repo": "https://github.com/pvedu/photovoltaic",
        "category": "environment",
        "image": "",
        "title": "photovoltaic",
        "description": null,
        "language": "HTML",
        "stars": 49,
        "website": "",
        "keywords": []
    },
    {
        "repo": "https://github.com/pvcaptest/pvcaptest",
        "category": "environment",
        "image": "",
        "title": "pvcaptest",
        "description": "Collection of functions and jupyter notebooks to partially automate running a capacity test following ASTM E2848.",
        "language": "Python",
        "stars": 19,
        "website": "",
        "keywords": [
            "automate",
            "jupyter",
            "partially",
            "running",
            "following",
            "test",
            "astm",
            "functions",
            "notebooks",
            "e2848"
        ]
    },
    {
        "repo": "https://github.com/danieljfarrell/pvtrace",
        "category": "environment",
        "image": "",
        "title": "pvtrace",
        "description": "Optical ray tracing for luminescent materials and spectral converter photovoltaic devices",
        "language": "Python",
        "stars": 98,
        "website": "",
        "keywords": [
            "energy",
            "optics",
            "photovoltaics",
            "python",
            "raytracing",
            "materials",
            "devices",
            "luminescent",
            "converter",
            "optical",
            "ray",
            "spectral",
            "tracing",
            "photovoltaic"
        ]
    },
    {
        "repo": "https://github.com/NREL/SolarPILOT",
        "category": "environment",
        "image": "",
        "title": "SolarPILOT",
        "description": "SolarPILOT power tower layout and optimization tool",
        "language": "C++",
        "stars": 48,
        "website": "https://www.nrel.gov/csp/solarpilot.html",
        "keywords": [
            "solarpilot",
            "optimization",
            "tower",
            "tool",
            "power",
            "layout"
        ]
    },
    {
        "repo": "https://github.com/slacgismo/solar-data-tools",
        "category": "environment",
        "image": "",
        "title": "solar-data-tools",
        "description": "Some data analysis tools for working with historical PV solar time-series data sets. ",
        "language": "Jupyter Notebook",
        "stars": 58,
        "website": "https://solar-data-tools.readthedocs.io",
        "keywords": [
            "tools",
            "data",
            "working",
            "series",
            "analysis",
            "time",
            "historical",
            "solar",
            "sets"
        ]
    },
    {
        "repo": "https://github.com/tdcosim/SolarPV-DER-simulation-tool",
        "category": "environment",
        "image": "",
        "title": "SolarPV-DER-simulation-tool",
        "description": "Allows user to run dynamics simulations for solar photovoltaic distributed energy resource connected to a stiff voltage source or to an external program. It allows modifying DER parameters, introducing external disturbance events, and visualizing the simulation results. The PV-DER (inverter) is modeled using dynamic phasor concept.",
        "language": "Python",
        "stars": 36,
        "website": "",
        "keywords": [
            "results",
            "disturbance",
            "external",
            "source",
            "solar",
            "using",
            "parameters",
            "photovoltaic",
            "voltage",
            "visualizing"
        ]
    },
    {
        "repo": "https://github.com/NREL/bifacial_radiance",
        "category": "environment",
        "image": "",
        "title": "bifacial_radiance",
        "description": "Toolkit for working with RADIANCE for the ray-trace modeling of Bifacial Photovoltaics",
        "language": "Python",
        "stars": 91,
        "website": "https://bifacial-radiance.readthedocs.io",
        "keywords": [
            "bifacial",
            "gui",
            "photovoltaics",
            "radiance",
            "renewable-energy",
            "renewables",
            "working",
            "photovoltaics",
            "toolkit",
            "ray",
            "bifacial",
            "radiance",
            "modeling",
            "trace"
        ]
    },
    {
        "repo": "https://github.com/PV-Lab/autoXRD",
        "category": "environment",
        "image": "",
        "title": "autoXRD",
        "description": "Automatic XRD classification for thin-film materials using CNNs, Class Activation Maps and Data Augmentation",
        "language": "Python",
        "stars": 50,
        "website": "",
        "keywords": [
            "activation",
            "materials",
            "automatic",
            "xrd",
            "data",
            "classification",
            "thin",
            "maps",
            "using",
            "augmentation"
        ]
    },
    {
        "repo": "https://github.com/PV-Lab/BayesProcess",
        "category": "environment",
        "image": "",
        "title": "BayesProcess",
        "description": "Physics informed Bayesian network + autoencoder for matching process / variable / performance in solar cells.",
        "language": "Jupyter Notebook",
        "stars": 31,
        "website": "",
        "keywords": [
            "network",
            "performance",
            "informed",
            "bayesian",
            "autoencoder",
            "matching",
            "variable",
            "cells",
            "solar",
            "process"
        ]
    },
    {
        "repo": "https://github.com/qpv-research-group/solcore5",
        "category": "environment",
        "image": "",
        "title": "solcore5",
        "description": "A multi-scale, python-based library for the modelling of solar cells and semiconductor materials",
        "language": "Python",
        "stars": 134,
        "website": "https://www.solcore.solar/",
        "keywords": [
            "hacktoberfest",
            "photovoltaic",
            "python",
            "semiconductor",
            "solar-cells",
            "scale",
            "materials",
            "library",
            "semiconductor",
            "based",
            "multi",
            "python",
            "cells",
            "solar",
            "modelling"
        ]
    },
    {
        "repo": "https://github.com/squishykid/solax",
        "category": "environment",
        "image": "",
        "title": "solax",
        "description": "🌞 Solax Inverter API Wrapper",
        "language": "Python",
        "stars": 107,
        "website": "",
        "keywords": [
            "home-automation",
            "iot",
            "photovoltaic",
            "raspberry-pi",
            "solar",
            "solax",
            "solax",
            "inverter",
            "wrapper",
            "api"
        ]
    },
    {
        "repo": "https://github.com/NREL/bifacialvf",
        "category": "environment",
        "image": "",
        "title": "bifacialvf",
        "description": "Bifacial PV View Factor model for system performance calculation",
        "language": "Python",
        "stars": 30,
        "website": "https://bifacialvf.readthedocs.io",
        "keywords": [
            "factor",
            "system",
            "model",
            "calculation",
            "bifacial",
            "view",
            "performance"
        ]
    },
    {
        "repo": "https://github.com/oscarperpinan/solar",
        "category": "environment",
        "image": "",
        "title": "solar",
        "description": "Solar Radiation and Photovoltaic Systems with R",
        "language": "R",
        "stars": 36,
        "website": "http://oscarperpinan.github.io/solar/",
        "keywords": [
            "radiation",
            "photovoltaic",
            "systems",
            "solar"
        ]
    },
    {
        "repo": "https://github.com/SolarTherm/SolarTherm",
        "category": "environment",
        "image": "",
        "title": "SolarTherm",
        "description": "Solar thermal power/fuel station performance simulation and optimisation using Modelica. Read a paper about our project: https://is.gd/solth",
        "language": "Modelica",
        "stars": 40,
        "website": "",
        "keywords": [
            "energy",
            "engineering",
            "modelica",
            "modelica-library",
            "optimisation",
            "simulation",
            "solar",
            "thermodynamics",
            "thermal",
            "station",
            "paper",
            "optimisation",
            "modelica",
            "read",
            "://",
            "solth",
            "fuel",
            "solar"
        ]
    },
    {
        "repo": "https://github.com/LibreSolar/bms-firmware",
        "category": "environment",
        "image": "",
        "title": "bms-firmware",
        "description": "Firmware for LibreSolar BMS boards based on bq769x0, bq769x2 or ISL94202",
        "language": "C",
        "stars": 157,
        "website": "https://libre.solar/bms-firmware/",
        "keywords": [
            "bq769x0",
            "isl94202",
            "libresolar",
            "based",
            "bms",
            "bq769x2",
            "boards",
            "firmware"
        ]
    },
    {
        "repo": "https://github.com/LibreSolar/charge-controller-firmware",
        "category": "environment",
        "image": "",
        "title": "charge-controller-firmware",
        "description": "Firmware for Libre Solar MPPT/PWM charge controllers",
        "language": "C++",
        "stars": 144,
        "website": "https://libre.solar/charge-controller-firmware/",
        "keywords": [
            "charge",
            "pwm",
            "solar",
            "controllers",
            "mppt",
            "firmware",
            "libre"
        ]
    },
    {
        "repo": "https://github.com/openclimatefix/pvoutput",
        "category": "environment",
        "image": "",
        "title": "pvoutput",
        "description": "Python code for downloading PV data from PVOutput.org",
        "language": "Python",
        "stars": 34,
        "website": "",
        "keywords": [
            "nowcasting",
            "pvoutput",
            "python",
            "python-library",
            "solar",
            "code",
            "data",
            "org",
            "pvoutput",
            "python",
            "downloading"
        ]
    },
    {
        "repo": "https://github.com/aqreed/solarpy",
        "category": "environment",
        "image": "",
        "title": "solarpy",
        "description": "Solar radiation model for flight dynamics. Based on Duffie & Beckman \"Solar energy thermal processes\" (1974)",
        "language": "Python",
        "stars": 52,
        "website": "",
        "keywords": [
            "beam-irradiance",
            "flight-simulation",
            "modeling",
            "photovoltaic",
            "python",
            "simulation",
            "solar-cells",
            "solar-energy",
            "sun-position",
            "radiation",
            "thermal",
            "duffie",
            "1974",
            "processes",
            "model",
            "based",
            "flight",
            "energy",
            "solar"
        ]
    },
    {
        "repo": "https://github.com/meltaxa/solariot",
        "category": "environment",
        "image": "",
        "title": "solariot",
        "description": "Leverage your IoT enabled Solar PV Inverter to stream your solar energy usage data to a real time dashboard.",
        "language": "Python",
        "stars": 211,
        "website": "https://solariot.live",
        "keywords": [
            "dashboard",
            "dweet",
            "freeboard",
            "influxdb",
            "iot",
            "modbus-sungrow",
            "pvoutput",
            "solar-energy",
            "sungrow-inverter",
            "telemetry",
            "dashboard",
            "data",
            "inverter",
            "iot",
            "usage",
            "stream",
            "time",
            "energy",
            "solar",
            "enabled"
        ]
    },
    {
        "repo": "https://github.com/pvlib/pvanalytics",
        "category": "environment",
        "image": "",
        "title": "pvanalytics",
        "description": "Quality control, filtering, feature labeling, and other tools for working with data from photovoltaic energy systems.",
        "language": "Python",
        "stars": 99,
        "website": "https://pvanalytics.readthedocs.io",
        "keywords": [
            "photovoltaic",
            "python",
            "renewable-energy",
            "renewables",
            "solar-energy",
            "tools",
            "systems",
            "working",
            "quality",
            "data",
            "control",
            "filtering",
            "feature",
            "energy",
            "photovoltaic"
        ]
    },
    {
        "repo": "https://github.com/PerovskiteSCModelling/IonMonger",
        "category": "environment",
        "image": "",
        "title": "IonMonger",
        "description": "A free and fast perovskite solar cell simulator with coupled ion vacancy and charge carrier dynamics in one dimension. Read the Wiki to find out more, or see our website for more information!",
        "language": "MATLAB",
        "stars": 35,
        "website": "https://sites.google.com/view/ionmonger/home",
        "keywords": [
            "halide-ion-migration",
            "perovskite-solar-cells",
            "free",
            "coupled",
            "solar",
            "ion",
            "one",
            "wiki",
            "website",
            "information",
            "dynamics",
            "simulator"
        ]
    },
    {
        "repo": "https://github.com/qpv-research-group/rayflare",
        "category": "environment",
        "image": "",
        "title": "rayflare",
        "description": "Open-source, integrated optical modelling of complex stacks",
        "language": "Python",
        "stars": 34,
        "website": "",
        "keywords": [
            "multiscale-simulation",
            "optics",
            "physics",
            "ray-tracing",
            "raytracing",
            "rigorous-coupled-wave",
            "solar-cells",
            "transfer-matrix-method",
            "open",
            "complex",
            "stacks",
            "optical",
            "source",
            "integrated",
            "modelling"
        ]
    },
    {
        "repo": "https://github.com/DuraMAT/pv-terms",
        "category": "environment",
        "image": "",
        "title": "pv-terms",
        "description": "Standard Nomenclature for PV Systems",
        "language": "Python",
        "stars": 16,
        "website": "",
        "keywords": [
            "standard",
            "systems",
            "nomenclature"
        ]
    },
    {
        "repo": "https://github.com/slacgismo/StatisticalClearSky",
        "category": "environment",
        "image": "",
        "title": "StatisticalClearSky",
        "description": "Statistical estimation of a clear sky signal from PV system power data",
        "language": "Jupyter Notebook",
        "stars": 30,
        "website": "",
        "keywords": [
            "system",
            "data",
            "sky",
            "estimation",
            "statistical",
            "clear",
            "signal",
            "power"
        ]
    },
    {
        "repo": "https://github.com/RentadroneCL/Photovoltaic_Fault_Detector",
        "category": "environment",
        "image": "",
        "title": "Photovoltaic_Fault_Detector",
        "description": "Model Photovoltaic Fault Detector based in model detector YOLOv.3, this repository contains four detector model with their weights and the explanation of how to use these models.",
        "language": "Jupyter Notebook",
        "stars": 41,
        "website": "https://simplemap.io",
        "keywords": [
            "deep-learning",
            "detection-boxes",
            "detector-model",
            "fault-detection",
            "keras",
            "model-detection",
            "object-detection",
            "photovoltaic-panels",
            "solar-energy",
            "tensorflow",
            "yolo3",
            "yolov",
            "fault",
            "detector",
            "repository",
            "model",
            "based",
            "models",
            "use",
            "contains",
            "explanation"
        ]
    },
    {
        "repo": "https://github.com/ropensci/nasapower",
        "category": "environment",
        "image": "",
        "title": "nasapower",
        "description": "API Client for NASA POWER Global Meteorology, Surface Solar Energy and Climatology in R",
        "language": "R",
        "stars": 99,
        "website": "https://docs.ropensci.org/nasapower",
        "keywords": [
            "agroclimatology",
            "agroclimatology-data",
            "data-access",
            "earth-science",
            "nasa",
            "nasa-power",
            "r",
            "r-package",
            "rstats",
            "weather",
            "weather-data",
            "weather-variables",
            "global",
            "api",
            "meteorology",
            "client",
            "nasa",
            "solar",
            "energy",
            "surface",
            "climatology",
            "power"
        ]
    },
    {
        "repo": "https://github.com/greco-project/pvcompare",
        "category": "environment",
        "image": "",
        "title": "pvcompare",
        "description": "pvcompare is a model for comparing the benefits of different PV technologies in local energy systems in different energy supply scenarios.",
        "language": "Python",
        "stars": 13,
        "website": "",
        "keywords": [
            "scenarios",
            "local",
            "systems",
            "model",
            "benefits",
            "pvcompare",
            "different",
            "energy",
            "technologies",
            "supply"
        ]
    },
    {
        "repo": "https://github.com/NREL/SolTrace",
        "category": "environment",
        "image": "",
        "title": "SolTrace",
        "description": "SolTrace",
        "language": "C++",
        "stars": 43,
        "website": "https://www.nrel.gov/csp/soltrace.html",
        "keywords": [
            "soltrace"
        ]
    },
    {
        "repo": "https://github.com/WMD-group/CarrierCapture.jl",
        "category": "environment",
        "image": "",
        "title": "CarrierCapture.jl",
        "description": "Julia package to compute trap-assisted electron and hole capture in semiconductors",
        "language": "Jupyter Notebook",
        "stars": 54,
        "website": "https://wmd-group.github.io/CarrierCapture.jl/dev/",
        "keywords": [
            "defects",
            "electronic-structure",
            "materials-design",
            "semiconductors",
            "solar-cells",
            "electron",
            "capture",
            "compute",
            "package",
            "hole",
            "trap",
            "semiconductors",
            "julia",
            "assisted"
        ]
    },
    {
        "repo": "https://github.com/ladybug-tools/honeybee",
        "category": "environment",
        "image": "",
        "title": "honeybee",
        "description": ":honeybee: A python library to create, run and visualize radiance studies. Core library of Honeybee[+].",
        "language": "Python",
        "stars": 93,
        "website": "http://ladybug-tools.github.io/honeybee/docs",
        "keywords": [
            "visualize",
            "library",
            "core",
            "honeybee",
            "create",
            "studies",
            "python",
            "run",
            "radiance",
            "[+]."
        ]
    },
    {
        "repo": "https://github.com/danjulio/MPPT-Solar-Charger",
        "category": "environment",
        "image": "",
        "title": "MPPT-Solar-Charger",
        "description": "Supporting documentation and software for the MPPT Solar Charger",
        "language": "C",
        "stars": 146,
        "website": "",
        "keywords": [
            "documentation",
            "supporting",
            "software",
            "solar",
            "charger",
            "mppt"
        ]
    },
    {
        "repo": "https://github.com/iat-cener/tonatiuh",
        "category": "environment",
        "image": "",
        "title": "tonatiuh",
        "description": "A Monte Carlo ray tracer for the optical simulation of solar concentrating systems",
        "language": "C++",
        "stars": 55,
        "website": "http://iat-cener.github.io/tonatiuh/",
        "keywords": [
            "energy",
            "simulation",
            "solar",
            "solar-concentrating-systems",
            "systems",
            "tracer",
            "concentrating",
            "carlo",
            "ray",
            "optical",
            "monte",
            "solar",
            "simulation"
        ]
    },
    {
        "repo": "https://github.com/kdmayer/3D-PV-Locator",
        "category": "environment",
        "image": "",
        "title": "3D-PV-Locator",
        "description": "Dockerized Repo for \"3D-PV-Locator: Large-scale detection of rooftop-mounted photovoltaic systems in 3D\" based on Applied Energy publication.",
        "language": "Python",
        "stars": 51,
        "website": "",
        "keywords": [
            "ai",
            "climate-change",
            "computer-vision",
            "deep-learning",
            "deeplabv3",
            "deepsolar",
            "inception-v3",
            "network-planning",
            "neurips-2020",
            "pv-systems",
            "remote-sensing",
            "renewable-energy",
            "satellite-imagery",
            "solar",
            "solar-panels",
            "scale",
            "systems",
            "rooftop",
            "repo",
            "publication",
            "applied",
            "based",
            "large",
            "mounted",
            "energy"
        ]
    },
    {
        "repo": "https://github.com/BreakingBytes/pvfree",
        "category": "environment",
        "image": "",
        "title": "pvfree",
        "description": "Free PV API",
        "language": "Python",
        "stars": 21,
        "website": "https://pvfree.azurewebsites.net/",
        "keywords": [
            "api",
            "python",
            "solar-energy",
            "free",
            "api"
        ]
    },
    {
        "repo": "https://github.com/pingswept/pysolar",
        "category": "environment",
        "image": "",
        "title": "pysolar",
        "description": "Pysolar is a collection of Python libraries for simulating the irradiation of any point on earth by the sun. It includes code for extremely precise ephemeris calculations.",
        "language": "Jupyter Notebook",
        "stars": 376,
        "website": "http://pysolar.org",
        "keywords": [
            "irradiation",
            "includes",
            "calculations",
            "code",
            "collection",
            "simulating",
            "ephemeris",
            "python",
            "point",
            "earth"
        ]
    },
    {
        "repo": "https://github.com/NREL/PV_ICE",
        "category": "environment",
        "image": "",
        "title": "PV_ICE",
        "description": "An open-source tool to quantify Solar Photovoltaics (PV) Energy and Mass Flows in the Circular Economy, from a Reliability and Lifetime approach",
        "language": "HTML",
        "stars": 36,
        "website": "https://pv-ice.readthedocs.io/en/latest/",
        "keywords": [
            "circular-economy",
            "circularity",
            "circularity-metrics",
            "lifetime",
            "mass-flow",
            "photovoltaics",
            "recycle",
            "reliability",
            "repair",
            "reuse",
            "solar-energy",
            "open",
            "approach",
            "flows",
            "lifetime",
            "photovoltaics",
            "circular",
            "economy",
            "source",
            "quantify",
            "mass"
        ]
    },
    {
        "repo": "https://gitlab.com/diw-evu/emobpy/emobpy",
        "category": "environment",
        "image": "",
        "title": "emobpy",
        "description": "",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": []
    },
    {
        "repo": "https://gitlab.com/fame-framework/fame-core",
        "category": "environment",
        "image": "",
        "title": "FAME-Core",
        "description": "Core library of FAME written in Java",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "FAME",
            "library",
            "core",
            "fame",
            "java",
            "written"
        ]
    },
    {
        "repo": "https://gitlab.com/dlr-ve/esy/remix/framework",
        "category": "environment",
        "image": "",
        "title": "REMix framework",
        "description": "The REMix framework for energy system optimization models",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "remix",
            "optimization",
            "system",
            "models",
            "framework",
            "energy"
        ]
    },
    {
        "repo": "https://gitlab.com/dlr-ve/esy/amiris/amiris-py",
        "category": "environment",
        "image": "",
        "title": "AMIRIS-Py",
        "description": "Python tools for the electricity market model [AMIRIS](https://gitlab.com/dlr-ve/esy/amiris/amiris)",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "tools",
            "gitlab",
            "electricity",
            "amiris",
            "model",
            "://",
            "python",
            "market",
            "esy",
            "https"
        ]
    },
    {
        "repo": "https://gitlab.com/diw-evu/oet/openenergytracker",
        "category": "environment",
        "image": "",
        "title": "Open Energy Tracker",
        "description": "The Open Energy Tracker is an open data platform for monitoring and visualizing energy policy targets.",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "data visualization",
            "dataset",
            "energy",
            "plotly",
            "policy",
            "python",
            "renewable energy",
            "open",
            "monitoring",
            "data",
            "targets",
            "policy",
            "energy",
            "platform",
            "visualizing",
            "tracker"
        ]
    },
    {
        "repo": "https://gitlab.com/mosaik/mosaik",
        "category": "environment",
        "image": "",
        "title": "mosaik",
        "description": "A flexible Smart Grid co-simulation framework.",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "flexible",
            "framework",
            "simulation",
            "smart",
            "grid"
        ]
    },
    {
        "repo": "https://gitlab.com/SmartGridToolbox/SmartGridToolbox",
        "category": "environment",
        "image": "",
        "title": "SmartGridToolbox",
        "description": "Modern C++ Smart Grid Simulation Library. See the [project pages](https://smartgridtoolbox.gitlab.io/SmartGridToolbox/) for more information, documentation, tutorials etc.",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "documentation",
            "gitlab",
            "library",
            "etc",
            "pages",
            "://",
            "smartgridtoolbox",
            "information",
            "see",
            "tutorials"
        ]
    },
    {
        "repo": "https://gitlab.com/energyincities/python-ehub",
        "category": "environment",
        "image": "",
        "title": "pyehub",
        "description": "A python-based, modular and nestable implementation of the Energy Hub model (balancing demand and supply, system capacity sizing and network flows using Mixed-Integer Linear Programming).",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "integer",
            "using",
            "demand",
            "balancing",
            "capacity",
            "network",
            "system",
            "sizing",
            "based",
            "supply"
        ]
    },
    {
        "repo": "https://gitlab.com/diw-evu/dieter_public/dieterpy",
        "category": "environment",
        "image": "",
        "title": "DIETERpy",
        "description": "Repository for the Python-GAMS version of the power market model DIETER",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "GAMS",
            "open source model",
            "power market model",
            "python",
            "renewable energy",
            "storage",
            "gams",
            "repository",
            "model",
            "dieter",
            "python",
            "market",
            "version",
            "power"
        ]
    },
    {
        "repo": "https://gitlab.com/energyincities/energy-signature-analyser",
        "category": "environment",
        "image": "",
        "title": "Energy Signature Analyser",
        "description": "",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": []
    },
    {
        "repo": "https://gitlab.com/retrofitcoop/macquette",
        "category": "environment",
        "image": "",
        "title": "Macquette",
        "description": "Building modelling tool primarily for retrofit assessments",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "building",
            "retrofit",
            "primarily",
            "assessments",
            "tool",
            "modelling"
        ]
    },
    {
        "repo": "https://gitlab.com/polito-edyce-prelude/predyce",
        "category": "environment",
        "image": "",
        "title": "Predyce",
        "description": "Python Realtime Energy DYnamics and Climate Evaluation tool developed by Politecnico di Torino",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "torino",
            "evaluation",
            "python",
            "realtime",
            "politecnico",
            "energy",
            "dynamics",
            "climate",
            "tool",
            "developed"
        ]
    },
    {
        "repo": "https://gitlab.com/eputs/ev-fleet-sim",
        "category": "environment",
        "image": "",
        "title": "EV Fleet Simulator",
        "description": "This software computes the electrical energy requirements of a fleet of vehicles. It also determines how much of this energy can be offset by renewable energy. It does all this by analyzing the fleet's GPS traces and applying EV and PV models.  Project website: 🔗 www.ev-fleet-sim.online ",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "data analysis",
            "electric vehicles",
            "public transport",
            "python",
            "renewable energy",
            "offset",
            "determines",
            "computes",
            "website",
            "models",
            "also",
            "analyzing",
            "gps",
            "project",
            "software"
        ]
    },
    {
        "repo": "https://gitlab.com/bioeconomy/forobs/biotrade/",
        "category": "environment",
        "image": "",
        "title": "biotrade",
        "description": "This package loads trade data on bio based commodities and products from the UN Comtrade\r\nand from FAOSTAT.",
        "language": null,
        "stars": null,
        "website": "https://gitlab.com/bioeconomy/forobs/biotrade",
        "keywords": [
            "bio",
            "data",
            "commodities",
            "products",
            "based",
            "loads",
            "comtrade",
            "package",
            "faostat",
            "trade"
        ]
    },
    {
        "repo": "https://gitlab.com/foodsharing-dev/foodsharing",
        "category": "environment",
        "image": "",
        "title": "foodsharing",
        "description": "foodsharing.de - A platform and initiative against food waste\r\n",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "foodsharing",
            "waste",
            "initiative",
            "platform",
            "food"
        ]
    },
    {
        "repo": "https://gitlab.com/NRAP/OpenIAM",
        "category": "environment",
        "image": "",
        "title": "NRAP-Open-IAM",
        "description": "NRAP-Open-IAM is an open-source integrated assessment model developed by National Risk Assessment Partnership during Phases II and III to facilitate risk assessment, management and containment assurance for geologic carbon sequestration projects. ",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "open",
            "iam",
            "phases",
            "source",
            "carbon",
            "nrap",
            "assurance",
            "geologic",
            "assessment",
            "national"
        ]
    },
    {
        "repo": "https://gitlab.com/ibarraespinosa/vein",
        "category": "environment",
        "image": "",
        "title": "vein",
        "description": "",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": []
    },
    {
        "repo": "https://gitlab.com/bonsamurais/bonsai/util/ipcc",
        "category": "environment",
        "image": "",
        "title": "ipcc",
        "description": "",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": []
    },
    {
        "repo": "https://gitlab.com/natural-solutions/reneco/ecoreleve-data",
        "category": "environment",
        "image": "",
        "title": "ecoreleve-data",
        "description": "Open source biodiversity data entry software",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "biodiversity",
            "open",
            "data",
            "source",
            "entry",
            "software"
        ]
    },
    {
        "repo": "https://gitlab.com/opendatabio/opendatabio",
        "category": "environment",
        "image": "",
        "title": "opendatabio",
        "description": "A  system for storing and retrieving biological data - floristics, ecology and monitoring",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "storing",
            "monitoring",
            "system",
            "data",
            "retrieving",
            "biological",
            "floristics",
            "ecology"
        ]
    },
    {
        "repo": "https://gitlab.com/openlandmap/eu-forest-tree-point-data",
        "category": "environment",
        "image": "",
        "title": "EU forest tree point data",
        "description": "A compilation of analysis-ready point data for the purpose of vegetation and Potential Natural Vegetation mapping (EU coverage only)",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "mapping",
            "natural",
            "potential",
            "data",
            "coverage",
            "purpose",
            "analysis",
            "point",
            "ready",
            "vegetation"
        ]
    },
    {
        "repo": "https://gitlab.com/wgms/glathida",
        "category": "environment",
        "image": "",
        "title": "glathida",
        "description": "Glacier Thickness Database (GlaThiDa)\r\nhttps://www.gtn-g.ch/data_catalogue_glathida\r\n",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "collaboration",
            "database",
            "datapackage",
            "glacier",
            "glaciology",
            "global",
            "gtn",
            "://",
            "thickness",
            "glathida",
            "glacier",
            "database",
            "https",
            "www",
            "data_catalogue_glathida"
        ]
    },
    {
        "repo": "https://gitlab.com/permafrostnet/teaspoon",
        "category": "environment",
        "image": "",
        "title": "teaspoon",
        "description": "Python for permafrost temperature data",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "dataset",
            "earth science",
            "geography",
            "temperature",
            "permafrost",
            "python",
            "data"
        ]
    },
    {
        "repo": "https://gitlab.com/wxmetvis/met.3d",
        "category": "environment",
        "image": "",
        "title": "met.3D",
        "description": "http://met3d.wavestoweather.de/",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "wavestoweather",
            "met3d",
            "http",
            "://"
        ]
    },
    {
        "repo": "https://github.com/NVIDIA/earth2mip",
        "category": "environment",
        "image": "",
        "title": "earth2mip",
        "description": "Earth-2 Model Intercomparison Project (MIP) is a python framework that enables climate researchers and scientists to inter-compare AI models for weather and climate.",
        "language": "Python",
        "stars": 209,
        "website": "https://nvidia.github.io/earth2mip/",
        "keywords": [
            "climate",
            "deep-learning",
            "weather",
            "mip",
            "weather",
            "model",
            "models",
            "researchers",
            "python",
            "inter",
            "scientists",
            "earth",
            "intercomparison"
        ]
    },
    {
        "repo": "https://github.com/EarthSystemDiagnostics/sedproxy",
        "category": "environment",
        "image": "",
        "title": "sedproxy",
        "description": "An R package for modelling sediment archived climate proxy records.",
        "language": "R",
        "stars": 7,
        "website": "https://earthsystemdiagnostics.github.io/sedproxy/",
        "keywords": [
            "records",
            "archived",
            "package",
            "sediment",
            "proxy",
            "climate",
            "modelling"
        ]
    },
    {
        "repo": "https://github.com/uDALES/u-dales",
        "category": "environment",
        "image": "",
        "title": "u-dales",
        "description": "uDALES: large-eddy-simulation software for urban flow, dispersion and microclimate modelling",
        "language": "Fortran",
        "stars": 57,
        "website": "https://udales.github.io/u-dales",
        "keywords": [
            "cfd",
            "computational-fluid-dynamics",
            "large-eddy-simulation",
            "urban-climate",
            "urban",
            "microclimate",
            "dispersion",
            "large",
            "flow",
            "udales",
            "simulation",
            "software",
            "eddy",
            "modelling"
        ]
    },
    {
        "repo": "https://github.com/UMEP-dev/SUEWS",
        "category": "environment",
        "image": "",
        "title": "SUEWS",
        "description": "Surface Urban Energy and Water Balance Scheme",
        "language": "Fortran",
        "stars": 12,
        "website": "https://suews.readthedocs.io/",
        "keywords": [
            "land-surface-model",
            "urban-analytics",
            "urban-climate-model",
            "urban",
            "water",
            "balance",
            "scheme",
            "energy",
            "surface"
        ]
    },
    {
        "repo": "https://github.com/ladybug-tools/dragonfly-legacy",
        "category": "environment",
        "image": "",
        "title": "dragonfly-legacy",
        "description": ":bug:  Legacy dragonfly plugin for large-scale climate and urban heat island modeling.",
        "language": "Python",
        "stars": 42,
        "website": "",
        "keywords": [
            "scale",
            "urban",
            "island",
            "bug",
            "dragonfly",
            "large",
            "legacy",
            "plugin",
            "heat",
            "modeling"
        ]
    },
    {
        "repo": "https://github.com/ladybug-tools/uwg",
        "category": "environment",
        "image": "",
        "title": "uwg",
        "description": ":city_sunrise: The Urban Weather Generator (uwg) is a Python application for modeling the urban heat island effect.",
        "language": "Python",
        "stars": 56,
        "website": "https://www.ladybug.tools/uwg/docs/",
        "keywords": [
            "uwg",
            "urban",
            "island",
            "city_sunrise",
            "weather",
            "python",
            "effect",
            "generator",
            "application",
            "heat"
        ]
    },
    {
        "repo": "https://github.com/contrailcirrus/pycontrails",
        "category": "environment",
        "image": "",
        "title": "pycontrails",
        "description": "Python library for modeling contrails and other aviation climate impacts",
        "language": "Python",
        "stars": 60,
        "website": "https://py.contrails.org/",
        "keywords": [
            "library",
            "library",
            "python",
            "contrails",
            "aviation",
            "modeling",
            "climate",
            "impacts"
        ]
    },
    {
        "repo": "https://github.com/ByMaxAnjos/LCZ4r",
        "category": "environment",
        "image": "",
        "title": "LCZ4r",
        "description": "An R Package for Local Climate Zones and Urban Heat Island Analysis",
        "language": "R",
        "stars": 5,
        "website": "https://bymaxanjos.github.io/LCZ4r/",
        "keywords": [
            "urban",
            "local",
            "island",
            "analysis",
            "package",
            "heat",
            "zones",
            "climate"
        ]
    },
    {
        "repo": "https://github.com/PCMDI/pcmdi_metrics",
        "category": "environment",
        "image": "",
        "title": "pcmdi_metrics",
        "description": "Open-source Python package for Systematic Evaluation of Climate and Earth System Models ",
        "language": "Python",
        "stars": 104,
        "website": "http://pcmdi.github.io/pcmdi_metrics/",
        "keywords": [
            "climate",
            "climate-analysis",
            "climate-data",
            "climate-model",
            "climate-model-evaluation",
            "climate-models",
            "climate-science",
            "climate-variability",
            "python",
            "open",
            "systematic",
            "system",
            "models",
            "climate",
            "python",
            "earth",
            "source",
            "package",
            "evaluation"
        ]
    },
    {
        "repo": "https://github.com/GEOS-ESM/swell",
        "category": "environment",
        "image": "",
        "title": "swell",
        "description": "Workflow system for coupled data assimilation applications",
        "language": "Python",
        "stars": 15,
        "website": "https://geos-esm.github.io/swell/",
        "keywords": [
            "system",
            "data",
            "assimilation",
            "workflow",
            "applications",
            "coupled"
        ]
    },
    {
        "repo": "https://github.com/HPSCTerrSys/TSMP",
        "category": "environment",
        "image": "",
        "title": "TSMP",
        "description": "Terrestrial Systems Modelling Platform (TSMP or TerrSysMP)",
        "language": "Fortran",
        "stars": 23,
        "website": "https://www.terrsysmp.org/",
        "keywords": [
            "systems",
            "terrestrial",
            "tsmp",
            "terrsysmp",
            "platform",
            "modelling"
        ]
    },
    {
        "repo": "https://github.com/JGCRI/helios",
        "category": "environment",
        "image": "",
        "title": "helios",
        "description": "Heating and Cooling Degree processing for GCAM from various sources such as WRF and CMIP",
        "language": "R",
        "stars": 3,
        "website": "http://jgcri.github.io/helios/",
        "keywords": [
            "cooling",
            "processing",
            "cmip",
            "degree",
            "sources",
            "heating",
            "various",
            "wrf",
            "gcam"
        ]
    },
    {
        "repo": "https://github.com/google-research/dinosaur",
        "category": "environment",
        "image": "",
        "title": "dinosaur",
        "description": null,
        "language": "Jupyter Notebook",
        "stars": 222,
        "website": "https://github.com/neuralgcm/dinosaur",
        "keywords": []
    },
    {
        "repo": "https://github.com/google-research/neuralgcm",
        "category": "environment",
        "image": "",
        "title": "neuralgcm",
        "description": "Hybrid ML + physics model of the Earth's atmosphere",
        "language": "Python",
        "stars": 711,
        "website": "https://neuralgcm.readthedocs.io",
        "keywords": [
            "climate",
            "neuralgcm",
            "weather",
            "hybrid",
            "model",
            "earth",
            "atmosphere",
            "physics"
        ]
    },
    {
        "repo": "https://github.com/NOAA-GFDL/FMScoupler",
        "category": "environment",
        "image": "",
        "title": "FMScoupler",
        "description": null,
        "language": "Fortran",
        "stars": 13,
        "website": "",
        "keywords": []
    },
    {
        "repo": "https://github.com/CABLE-LSM/CABLE",
        "category": "environment",
        "image": "",
        "title": "CABLE",
        "description": "Home to the CABLE land surface model and its documentation",
        "language": "Fortran",
        "stars": 12,
        "website": "https://cable.readthedocs.io/en/latest/",
        "keywords": [
            "documentation",
            "land",
            "model",
            "home",
            "cable",
            "surface"
        ]
    },
    {
        "repo": "https://github.com/NVIDIA/earth2studio",
        "category": "environment",
        "image": "",
        "title": "earth2studio",
        "description": "Open-source deep-learning framework for exploring, building and deploying AI weather/climate workflows.",
        "language": "Python",
        "stars": 107,
        "website": "https://nvidia.github.io/earth2studio/",
        "keywords": [
            "ai",
            "climate-science",
            "deep-learning",
            "weather",
            "building",
            "deploying",
            "open",
            "exploring",
            "weather",
            "deep",
            "source",
            "framework",
            "climate",
            "workflows"
        ]
    },
    {
        "repo": "https://github.com/nci/scores",
        "category": "environment",
        "image": "",
        "title": "scores",
        "description": "scores: Metrics for the verification, evaluation and optimisation of forecasts, predictions or models.",
        "language": "Jupyter Notebook",
        "stars": 84,
        "website": "https://scores.readthedocs.io/",
        "keywords": [
            "climate",
            "contingency-table",
            "dask",
            "forecast-evaluation",
            "forecast-verification",
            "forecasting",
            "model-validation",
            "oceanography",
            "pandas",
            "python",
            "verification",
            "weather",
            "xarray",
            "predictions",
            "metrics",
            "optimisation",
            "models",
            "verification",
            "scores",
            "forecasts",
            "evaluation"
        ]
    },
    {
        "repo": "https://github.com/pik-copan/pyunicorn",
        "category": "environment",
        "image": "",
        "title": "pyunicorn",
        "description": "Unified Complex Network and Recurrence Analysis Toolbox",
        "language": "Python",
        "stars": 200,
        "website": "http://pik-potsdam.de/~donges/pyunicorn/",
        "keywords": [
            "network",
            "complex",
            "analysis",
            "unified",
            "toolbox",
            "recurrence"
        ]
    },
    {
        "repo": "https://github.com/escomp/ctsm",
        "category": "environment",
        "image": "",
        "title": "CTSM",
        "description": "Community Terrestrial Systems Model (includes the Community Land Model of CESM)",
        "language": "Fortran",
        "stars": 310,
        "website": "http://www.cesm.ucar.edu/models/cesm2.0/land/",
        "keywords": [
            "cesm",
            "climate",
            "clm",
            "ecosystem",
            "hydrology",
            "land",
            "land-surface-model",
            "ncar",
            "land",
            "systems",
            "terrestrial",
            "model",
            "cesm",
            "includes",
            "community"
        ]
    },
    {
        "repo": "https://github.com/ICTP/RegCM",
        "category": "environment",
        "image": "",
        "title": "RegCM",
        "description": "ICTP Regional Climate Model",
        "language": "Fortran",
        "stars": 58,
        "website": "https://www.ictp.it/esp/about",
        "keywords": [
            "climate-model",
            "regional-climate-model",
            "model",
            "climate",
            "regional",
            "ictp"
        ]
    },
    {
        "repo": "https://github.com/Geodels/gospl",
        "category": "environment",
        "image": "",
        "title": "gospl",
        "description": "Global Scalable Paleo Landscape Evolution Model",
        "language": "Python",
        "stars": 66,
        "website": "https://gospl.readthedocs.io",
        "keywords": [
            "basin-modeling",
            "compaction",
            "erosion-process",
            "landscape",
            "landscape-evolution-model",
            "lithology",
            "paleoclimate",
            "paleogeography",
            "sediment-transport",
            "sedimentation",
            "global",
            "scalable",
            "model",
            "paleo",
            "landscape",
            "evolution"
        ]
    },
    {
        "repo": "https://github.com/Aalto-QuML/ClimODE",
        "category": "environment",
        "image": "",
        "title": "ClimODE",
        "description": "ClimODE: Climate and Weather Forecasting With Physics-informed Neural ODEs",
        "language": "Python",
        "stars": 75,
        "website": "https://yogeshverma1998.github.io/ClimODE/",
        "keywords": [
            "odes",
            "informed",
            "neural",
            "weather",
            "climode",
            "forecasting",
            "climate",
            "physics"
        ]
    },
    {
        "repo": "https://github.com/ciceroOslo/ciceroscm",
        "category": "environment",
        "image": "",
        "title": "ciceroscm",
        "description": "Python version of the CICERO-SCM simple climate model/emulator",
        "language": "Jupyter Notebook",
        "stars": 19,
        "website": "",
        "keywords": [
            "simple",
            "scm",
            "model",
            "python",
            "emulator",
            "version",
            "climate",
            "cicero"
        ]
    },
    {
        "repo": "https://github.com/cf-convention/cf-conventions",
        "category": "environment",
        "image": "",
        "title": "cf-conventions",
        "description": "AsciiDoc Source",
        "language": "R",
        "stars": 89,
        "website": "http://cfconventions.org/cf-conventions/cf-conventions",
        "keywords": [
            "source",
            "asciidoc"
        ]
    },
    {
        "repo": "https://github.com/NCAS-CMS/cf-python",
        "category": "environment",
        "image": "",
        "title": "cf-python",
        "description": "A CF-compliant Earth Science data analysis library",
        "language": "Python",
        "stars": 128,
        "website": "http://ncas-cms.github.io/cf-python",
        "keywords": [
            "cf",
            "cfdm",
            "cfunits",
            "data-analysis",
            "earth-science",
            "metadata",
            "netcdf",
            "pp",
            "python",
            "um",
            "compliant",
            "library",
            "data",
            "analysis",
            "earth",
            "science"
        ]
    },
    {
        "repo": "https://github.com/cedadev/cf-checker",
        "category": "environment",
        "image": "",
        "title": "cf-checker",
        "description": null,
        "language": "Python",
        "stars": 73,
        "website": "",
        "keywords": []
    },
    {
        "repo": "https://github.com/Unidata/netcdf-fortran",
        "category": "environment",
        "image": "",
        "title": "netcdf-fortran",
        "description": "Official GitHub repository for netCDF-Fortran libraries, which depend on the netCDF C library.  Install the netCDF C library first. ",
        "language": "Fortran",
        "stars": 244,
        "website": "",
        "keywords": [
            "dataset",
            "hacktoberfest",
            "netcdf-fortran",
            "netcdf-library",
            "unidata",
            "first",
            "install",
            "library",
            "repository",
            "github",
            "depend",
            "official",
            "libraries",
            "fortran",
            "netcdf"
        ]
    },
    {
        "repo": "https://github.com/Unidata/netcdf-c",
        "category": "environment",
        "image": "",
        "title": "netcdf-c",
        "description": "Official GitHub repository for netCDF-C libraries and utilities.",
        "language": "C",
        "stars": 522,
        "website": "",
        "keywords": [
            "c",
            "hacktoberfest",
            "netcdf",
            "unidata",
            "unidata-netcdf",
            "utilities",
            "repository",
            "github",
            "official",
            "libraries",
            "netcdf"
        ]
    },
    {
        "repo": "https://github.com/Unidata/netcdf4-python",
        "category": "environment",
        "image": "",
        "title": "netcdf4-python",
        "description": "netcdf4-python: python/numpy interface to the netCDF C library",
        "language": "Cython",
        "stars": 760,
        "website": "http://unidata.github.io/netcdf4-python",
        "keywords": [
            "netcdf",
            "netcdf4",
            "python",
            "netcdf4",
            "library",
            "python",
            "numpy",
            "interface",
            "netcdf"
        ]
    },
    {
        "repo": "https://github.com/PCMDI/cmor",
        "category": "environment",
        "image": "",
        "title": "cmor",
        "description": "Climate Model Output Rewriter",
        "language": "C",
        "stars": 53,
        "website": "",
        "keywords": [
            "cmip6",
            "cmor3",
            "esgf",
            "prepare",
            "rewriter",
            "climate",
            "model",
            "output"
        ]
    },
    {
        "repo": "https://github.com/h5netcdf/h5netcdf",
        "category": "environment",
        "image": "",
        "title": "h5netcdf",
        "description": "Pythonic interface to netCDF4 via h5py",
        "language": "Python",
        "stars": 189,
        "website": "https://h5netcdf.org",
        "keywords": [
            "h5py",
            "hdf5",
            "netcdf",
            "python",
            "netcdf4",
            "pythonic",
            "h5py",
            "interface",
            "via"
        ]
    },
    {
        "repo": "https://github.com/pydata/xarray",
        "category": "environment",
        "image": "",
        "title": "xarray",
        "description": "N-D labeled arrays and datasets in Python",
        "language": "Python",
        "stars": 3655,
        "website": "https://xarray.dev",
        "keywords": [
            "dask",
            "netcdf",
            "numpy",
            "pandas",
            "python",
            "xarray",
            "labeled",
            "arrays",
            "python",
            "datasets"
        ]
    },
    {
        "repo": "https://github.com/xarray-contrib/cf-xarray",
        "category": "environment",
        "image": "",
        "title": "cf-xarray",
        "description": "an accessor for xarray objects that interprets CF attributes",
        "language": "Python",
        "stars": 160,
        "website": "https://cf-xarray.readthedocs.io/",
        "keywords": [
            "cf-conventions",
            "metadata",
            "xarray",
            "attributes",
            "objects",
            "xarray",
            "interprets",
            "accessor"
        ]
    },
    {
        "repo": "https://github.com/ropensci/rnoaa",
        "category": "environment",
        "image": "",
        "title": "rnoaa",
        "description": "R interface to many NOAA data APIs",
        "language": "R",
        "stars": 332,
        "website": "https://docs.ropensci.org/rnoaa",
        "keywords": [
            "climate",
            "noaa",
            "noaa-data",
            "r",
            "r-package",
            "rstats",
            "data",
            "many",
            "noaa",
            "apis",
            "interface"
        ]
    },
    {
        "repo": "https://github.com/meteostat/meteostat-python",
        "category": "environment",
        "image": "",
        "title": "meteostat-python",
        "description": "Access and analyze historical weather and climate data with Python.",
        "language": "Python",
        "stars": 440,
        "website": "https://dev.meteostat.net/python/",
        "keywords": [
            "climate",
            "climate-change",
            "climate-data",
            "data-science",
            "meteostat",
            "open-data",
            "statistics",
            "weather",
            "weather-data",
            "weather-station",
            "data",
            "analyze",
            "weather",
            "python",
            "historical",
            "access",
            "climate"
        ]
    },
    {
        "repo": "https://github.com/SantanderMetGroup/loadeR",
        "category": "environment",
        "image": "",
        "title": "loadeR",
        "description": "A climate4R package for data access ",
        "language": "R",
        "stars": 13,
        "website": "https://github.com/SantanderMetGroup/climate4R",
        "keywords": [
            "access",
            "climate4r",
            "package",
            "data"
        ]
    },
    {
        "repo": "https://github.com/VeruGHub/easyclimate",
        "category": "environment",
        "image": "",
        "title": "easyclimate",
        "description": "Easy access to high-resolution daily climate data for Europe",
        "language": "R",
        "stars": 48,
        "website": "https://verughub.github.io/easyclimate/",
        "keywords": [
            "climate-data",
            "europe",
            "r-package",
            "data",
            "daily",
            "access",
            "high",
            "resolution",
            "europe",
            "climate",
            "easy"
        ]
    },
    {
        "repo": "https://github.com/ropensci/GSODR",
        "category": "environment",
        "image": "",
        "title": "GSODR",
        "description": "API Client for Global Surface Summary of the Day (GSOD) Weather Data Client in R",
        "language": "R",
        "stars": 92,
        "website": "https://docs.ropensci.org/GSODR",
        "keywords": [
            "daily-data",
            "daily-weather",
            "data-access",
            "global-data",
            "gsod",
            "historical-data",
            "historical-weather",
            "ncdc",
            "ncei",
            "r",
            "r-package",
            "rstats",
            "weather",
            "weather-data",
            "weather-information",
            "weather-stations",
            "gsod",
            "global",
            "api",
            "data",
            "weather",
            "summary",
            "client",
            "day",
            "surface"
        ]
    },
    {
        "repo": "https://github.com/IPCC-WG1/Chapter-9",
        "category": "environment",
        "image": "",
        "title": "Chapter-9",
        "description": "Repository with the code and data for all figures from Chapter 9 of the IPCC AR6",
        "language": "MATLAB",
        "stars": 78,
        "website": "",
        "keywords": [
            "chapter",
            "code",
            "repository",
            "ar6",
            "ipcc",
            "data",
            "figures"
        ]
    },
    {
        "repo": "https://github.com/SantanderMetGroup/ATLAS",
        "category": "environment",
        "image": "",
        "title": "ATLAS",
        "description": "Datasets, code and virtual workspace for the Climate Change ATLAS",
        "language": "Jupyter Notebook",
        "stars": 88,
        "website": "",
        "keywords": [
            "climate-change-atlas",
            "climate4r",
            "cmip6",
            "cordex",
            "ipcc-regions",
            "warming-levels",
            "atlas",
            "code",
            "workspace",
            "virtual",
            "change",
            "climate",
            "datasets"
        ]
    },
    {
        "repo": "https://github.com/pylandtemp/pylandtemp",
        "category": "environment",
        "image": "",
        "title": "pylandtemp",
        "description": "Algorithms for computing global land surface temperature and emissivity from NASA's Landsat satellite images with Python.",
        "language": "Python",
        "stars": 173,
        "website": "",
        "keywords": [
            "climate",
            "earth-observation",
            "earth-science",
            "geodata",
            "geospatial",
            "image-processing",
            "landsat",
            "landsat-8",
            "landsat-data",
            "nasa-api",
            "nasa-data",
            "python",
            "raster",
            "remote-sensing",
            "satellite-data",
            "satellite-imagery-analysis",
            "satellite-images",
            "landsat",
            "land",
            "global",
            "emissivity",
            "temperature",
            "computing",
            "python",
            "images",
            "nasa",
            "surface"
        ]
    },
    {
        "repo": "https://github.com/ecmwf/cdsapi",
        "category": "environment",
        "image": "",
        "title": "cdsapi",
        "description": "Python API to access the Copernicus Climate Data Store (CDS) ",
        "language": "Python",
        "stars": 246,
        "website": "",
        "keywords": [
            "api",
            "data",
            "python",
            "access",
            "copernicus",
            "climate",
            "cds",
            "store"
        ]
    },
    {
        "repo": "https://github.com/ropensci/prism",
        "category": "environment",
        "image": "",
        "title": "prism",
        "description": "Download data from the Oregon PRISM climate data project http://www.prism.oregonstate.edu/",
        "language": "R",
        "stars": 57,
        "website": "https://docs.ropensci.org/prism",
        "keywords": [
            "r",
            "r-package",
            "rstats",
            "oregon",
            "http",
            "data",
            "www",
            "://",
            "prism",
            "download",
            "oregonstate",
            "edu",
            "project"
        ]
    },
    {
        "repo": "https://github.com/rOpenSpain/climaemet",
        "category": "environment",
        "image": "",
        "title": "climaemet",
        "description": "R Climate AEMET Tools",
        "language": "R",
        "stars": 42,
        "website": "https://ropenspain.github.io/climaemet/",
        "keywords": [
            "aemet",
            "climate",
            "cran",
            "data",
            "forecast-api",
            "r",
            "r-package",
            "ropenspain",
            "rstats",
            "science",
            "spain",
            "weather-api",
            "tools",
            "climate",
            "aemet"
        ]
    },
    {
        "repo": "https://github.com/ropensci/chirps",
        "category": "environment",
        "image": "",
        "title": "chirps",
        "description": "API Client for CHIRPS",
        "language": "R",
        "stars": 31,
        "website": "https://docs.ropensci.org/chirps/",
        "keywords": [
            "chirps",
            "climatology",
            "precipitation-data",
            "rstats",
            "chirps",
            "client",
            "api"
        ]
    },
    {
        "repo": "https://github.com/SERVIR/ClimateSERVpy",
        "category": "environment",
        "image": "",
        "title": "ClimateSERVpy",
        "description": "This is a package to access the ClimateSERV API",
        "language": "Python",
        "stars": 9,
        "website": "https://pypi.org/project/climateserv/",
        "keywords": [
            "chirps",
            "climateserv",
            "dataset",
            "emodis",
            "esi",
            "imerg",
            "python",
            "smap",
            "time-series",
            "access",
            "package",
            "climateserv",
            "api"
        ]
    },
    {
        "repo": "https://github.com/bluegreen-labs/ecmwfr",
        "category": "environment",
        "image": "",
        "title": "ecmwfr",
        "description": "Interface to the public ECMWF API Web Services",
        "language": "R",
        "stars": 106,
        "website": "https://bluegreen-labs.github.io/ecmwfr/",
        "keywords": [
            "cds",
            "climate-data",
            "copernicus",
            "ecmwf-api",
            "ecmwf-services",
            "r-package",
            "rstats",
            "web",
            "api",
            "services",
            "interface",
            "public",
            "ecmwf"
        ]
    },
    {
        "repo": "https://github.com/cortinah/hockeystick",
        "category": "environment",
        "image": "",
        "title": "hockeystick",
        "description": "Download and Visualize Essential Global Heating Data in R",
        "language": "R",
        "stars": 52,
        "website": "https://cortinah.github.io/hockeystick/",
        "keywords": [
            "carbon",
            "carbon-dioxide-data",
            "carbon-emissions",
            "climate",
            "climate-change",
            "climate-data",
            "climate-science",
            "ggplot2",
            "methane",
            "noaa",
            "r",
            "rstats",
            "sea-ice",
            "sea-levels",
            "temperature-data",
            "warming-stripes",
            "visualize",
            "global",
            "data",
            "essential",
            "heating",
            "download"
        ]
    },
    {
        "repo": "https://github.com/ropensci/clifro",
        "category": "environment",
        "image": "",
        "title": "clifro",
        "description": "Easily download and visualise climate data from CliFlo",
        "language": "R",
        "stars": 27,
        "website": "https://docs.ropensci.org/clifro",
        "keywords": [
            "climate-data",
            "climate-stations",
            "kml",
            "national-climate-database",
            "r",
            "r-package",
            "rstats",
            "weather",
            "windrose",
            "zealand",
            "data",
            "easily",
            "visualise",
            "download",
            "climate",
            "cliflo"
        ]
    },
    {
        "repo": "https://github.com/ropensci/rWBclimate",
        "category": "environment",
        "image": "",
        "title": "rWBclimate",
        "description": ":warning: ARCHIVED :warning: R interface for the World Bank climate data",
        "language": "HTML",
        "stars": 68,
        "website": "",
        "keywords": [
            "r",
            "r-package",
            "rstats",
            "world",
            "data",
            "warning",
            "archived",
            "bank",
            "climate",
            "interface"
        ]
    },
    {
        "repo": "https://github.com/zmlabe/IceVarFigs",
        "category": "environment",
        "image": "",
        "title": "IceVarFigs",
        "description": "🌀 Weather and climate graphics for science communication 🌀",
        "language": "Python",
        "stars": 82,
        "website": "https://zacklabe.com/",
        "keywords": [
            "arctic-sea-ice",
            "climate-change",
            "climate-variability",
            "scicomm",
            "sea-ice-thickness",
            "graphics",
            "weather",
            "communication",
            "science",
            "climate"
        ]
    },
    {
        "repo": "https://github.com/JuliaClimate/ClimateSatellite.jl",
        "category": "environment",
        "image": "",
        "title": "ClimateSatellite.jl",
        "description": "Julia package that downloads satellite measurements and observational data",
        "language": "Julia",
        "stars": 43,
        "website": "",
        "keywords": [
            "climate",
            "climate-analysis",
            "climate-science",
            "gpm-imerg",
            "data",
            "measurements",
            "downloads",
            "package",
            "julia",
            "observational",
            "satellite"
        ]
    },
    {
        "repo": "https://github.com/SERVIR/ClimateSERV2",
        "category": "environment",
        "image": "",
        "title": "ClimateSERV2",
        "description": "ClimateSERV allows development practitioners, scientists/researchers, and government decision-makers to visualize and download historical rainfall data, vegetation condition data, and 180-day forecasts of rainfall and temperature to improve understanding of, and make improved decisions for, issues related to agriculture and water availability.",
        "language": "Python",
        "stars": 9,
        "website": "https://climateserv.servirglobal.net/",
        "keywords": [
            "chirps",
            "climate",
            "climateserv",
            "emodis",
            "esi",
            "imerg",
            "ndvi",
            "servir",
            "servirglobal",
            "government",
            "forecasts",
            "day",
            "development",
            "climateserv",
            "rainfall",
            "makers",
            "allows",
            "data",
            "agriculture"
        ]
    },
    {
        "repo": "https://github.com/pytroll/pygac",
        "category": "environment",
        "image": "",
        "title": "pygac",
        "description": "A python package to read and calibrate NOAA and Metop AVHRR GAC and LAC data",
        "language": "Python",
        "stars": 21,
        "website": "https://pygac.readthedocs.org/",
        "keywords": [
            "avhrr",
            "calibration",
            "climate",
            "gac",
            "hacktoberfest",
            "lac",
            "metop",
            "navigation",
            "noaa",
            "radiometric",
            "satellite",
            "tiros",
            "data",
            "avhrr",
            "gac",
            "lac",
            "calibrate",
            "python",
            "read",
            "noaa",
            "package",
            "metop"
        ]
    },
    {
        "repo": "https://github.com/CCI-Tools/cate",
        "category": "environment",
        "image": "",
        "title": "cate",
        "description": "ESA CCI Toolbox (Cate)",
        "language": "Python",
        "stars": 51,
        "website": "",
        "keywords": [
            "cci",
            "climate",
            "conda",
            "esa",
            "python",
            "toolbox",
            "esa",
            "cci",
            "cate"
        ]
    },
    {
        "repo": "https://gitlab.com/then-try-this/climate-tool",
        "category": "environment",
        "image": "",
        "title": "Climate Tool",
        "description": "A climate tool for Cornwall Council",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "tool",
            "climate",
            "cornwall",
            "council"
        ]
    },
    {
        "repo": "https://gitlab.com/hotmaps/potential/WWTP",
        "category": "environment",
        "image": "",
        "title": "potential_WWTP",
        "description": "Waste water potential nuts3 and local resolution yearly",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "waste",
            "local",
            "potential",
            "water",
            "yearly",
            "resolution",
            "nuts3"
        ]
    },
    {
        "repo": "https://gitlab.com/xdc-model/xdc",
        "category": "environment",
        "image": "",
        "title": "XDC",
        "description": "XDC Model implementation",
        "language": null,
        "stars": null,
        "website": "",
        "keywords": [
            "implementation",
            "model",
            "xdc"
        ]
    }
]